# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input AuthEmailChangePerformInput {
  token: String!
}

input AuthEmailChangeRequestInput {
  email: String!
}

input AuthEmailVerifyAvailabilityInput {
  email: String!
}

input AuthPasswordChangeInput {
  newPassword: String!
  oldPassword: String!

  """Force authentication on all other active sessions"""
  resetOtherSessions: Boolean = false
}

input AuthPasswordChangeRequestInput {
  email: String!
}

input AuthPasswordPerformResetInput {
  password: String!
  resetOtherSessions: Boolean = false
  token: String!
}

input AuthPasswordVerifyInput {
  password: String!
}

input AuthPasswordVerifyResetRequestInput {
  token: String!
}

type AuthStatusDto {
  message: String
  ok: Boolean!
}

type AuthTokenDto {
  message: String
  ok: Boolean!
  token: String!
}

input AuthUserCredentialsInput {
  email: String!
  password: String!
}

input AuthUserSignupInput {
  email: String!
  firstName: String!
  language: String!
  lastName: String!
  password: String!
}

input AuthUserVerifyInput {
  token: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Mutation {
  authEmailChangePerform(input: AuthEmailChangePerformInput!): AuthStatusDto!
  authEmailChangeRequest(input: AuthEmailChangeRequestInput!): AuthStatusDto!
  authEmailVerifyAvailability(input: AuthEmailVerifyAvailabilityInput!): AuthStatusDto!
  authPasswordChange(input: AuthPasswordChangeInput!): AuthStatusDto!
  authPasswordPerformReset(input: AuthPasswordPerformResetInput!): AuthStatusDto!
  authPasswordResetRequest(input: AuthPasswordChangeRequestInput!): AuthStatusDto!
  authPasswordVerify(input: AuthPasswordVerifyInput!): AuthStatusDto!
  authPasswordVerifyResetRequest(input: AuthPasswordVerifyResetRequestInput!): AuthStatusDto!
  authTokenRefresh: AuthTokenDto!
  authUserLogin(input: AuthUserCredentialsInput!): AuthTokenDto!
  authUserLogout: AuthStatusDto!
  authUserSignup(input: AuthUserSignupInput!): AuthTokenDto!
  authUserVerify(input: AuthUserVerifyInput!): AuthStatusDto!
  systemContactUs(input: SystemContactUsInput!): SystemStatusDto!

  """Update user's own info"""
  userSelfUpdate(input: UserSelfUpdateInput!): UserDto!

  """Privileged user update"""
  userUpdate(input: UserUpdateInput!): UserDto!
}

"""Ascending or Descending direction for a given `orderBy` argument."""
enum OrderDirection {
  asc
  desc
}

"""User permission"""
enum Permission {
  appALL
  contactMessageALL
  contactMessageCREATE
  contactMessageDELETE
  contactMessageREAD
  contactMessageUPDATE
  groupALL
  groupCREATE
  groupDELETE
  groupREAD
  groupUPDATE
  userALL
  userCREATE
  userDELETE
  userREAD
  userUPDATE
}

type Query {
  """Get other user info"""
  user(input: UserWhereByIdInput!): UserDto!

  """Get user's own info"""
  userSelf(id: String!): UserDto!
  users(cursor: String, orderBy: UserOrder, query: String = "", skip: Int, take: Int): [UserDto!]!
}

"""User role"""
enum Role {
  ADMIN
  STAFF
  SUPERUSER
  USER
}

input SystemContactUsInput {
  body: String!
  email: String!
  name: String!
  subject: String!
}

type SystemStatusDto {
  message: String
  ok: Boolean!
}

type UserDto {
  """Object's creation time"""
  createdAt: DateTime!
  email: String
  firstName: String
  groupId: ID
  id: ID!

  """User is active"""
  isActive: Boolean

  """User is verified"""
  isVerified: Boolean
  language: String
  lastName: String
  permissions: [Permission!]
  role: Role

  """Object's update time"""
  updatedAt: DateTime!
  username: String
}

type UserDtoEdge {
  cursor: String!
  node: UserDto!
}

input UserOrder {
  direction: OrderDirection!
  field: UserOrderField!
}

"""User connection order list."""
enum UserOrderField {
  createdAt
  firstName
  id
  lastName
  updatedAt
  username
}

input UserSelfUpdateInput {
  firstName: String
  id: ID!
  language: String
  lastName: String
}

input UserUpdateInput {
  firstName: String
  groupId: ID
  id: ID!

  """User is active"""
  isActive: Boolean

  """User is verified"""
  isVerified: Boolean
  language: String
  lastName: String
  permissions: [Permission!]!
  role: Role
}

input UserWhereByIdInput {
  id: ID!
}
